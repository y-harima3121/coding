@use "../../foundation/var" as *;
@use "../../foundation/responsive" as *;
/* ! ==================================================
- テーブル
================================================== */
.t-wrapper{
  flex: auto;
  .t-head{
    margin-block-end:1rem;
    &__count{
      color: var(--bg);
    }
  }
  .t-body{
    .t-table{
      overflow: scroll;
      height: 60vh;
      overflow-x: auto;
      &.h-45{
        height: 45vh;
      }
      table{
        thead{
          border:none;
          tr{
            position:relative;
            &:after{
              content: '';
              width: 100%;
              height: 1px;
              background-color: #000;
              position:absolute;
              bottom:0;
              left:0;
            }
          }
        }
      }
    }
  }
  .t-foot{
    margin-block-start: 1rem;
  }
}
%table{
  width: 100%;
  position:relative;
}
table{
  @extend %table; 
  $i: 1;
  @while $i <= 20 {
    &.table__#{$i}00 {
      min-width: (100px * $i);
    }
    $i: $i + 1;
  }
  .c-button{
    &__gray{
      font-size: 10px;
      padding: 3px;
      height: inherit;
      text-align: center;
      min-width: inherit;
      &:hover{
        border: none;
      }
    }
  }
  .c-image{
    background-color: #eee;
  }
  .thumbnail{
    background-color: var(--bg-deep);
    border-radius: 50%;
    aspect-ratio: 1/1;
    width: 40px;
    object-fit: cover;
    border: 1px solid var(--border);
  }
  th,td{
    padding:.5rem .5rem;
    p{
      line-height: 1.3em;
    }
    .c-txt__icon {
      background: var(--primary-light);
      padding: 2px 4px;
      border-radius: 5px;
      color: #fff;
      font-weight: 500;
      text-align: center;
      &.add{
        display: block !important;
      }
    }
  }
  thead{
    position: sticky;
    top: -1px;
    left: 0;
    background-color: var(--bg);
    z-index: 1;
    border-bottom:#000 solid 1px;
    p{
      font-size: .825rem;
      font-weight:500;
    }
    th{
      min-width: 40px;
      font-weight: 500;
      .sortable{
        cursor: pointer;
        display: flex;
        align-items: center;
        &:hover{
          color: var(--primary);
        }
        &::after{
          content: '';
          width: 1rem;
          aspect-ratio: 1/1;
          background: white url(../image/common/shape/updown.svg) no-repeat center;
          background-size: cover;
          display: inline-block;
          border-radius: 4px;
          margin-inline-start: 0.25rem;
          border:1px solid var(--primary);
        }
        &.change{
          &:after{
            transform: rotate(180deg);
          }
        }
      }
    }
  }
  tbody{
    tr{
      +tr{
        border-top:var(--border-light) 1px solid;
      }
      &[data-href]{
        cursor: pointer;
        transition: all 0.2s ease;
        &:hover{
          background-color: var(--primary-light);
        }
      }
      p{
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
      }
      .c-txt__alert{
        background-color:var(--invalid);
        color:#fff;
        padding:2px 4px;
      }
      .number{
        text-align: center;
        &:before{
          content: attr(data-before)'';
          font-size: 13px;
          font-weight: 500;
          color: #888;;
          margin:0 4px 0 0;
        }
        &:after{
          content: attr(data-after)'';
          font-size: 13px;
          font-weight: 500;
          color: #888;;
          margin:0 0 0 4px;
        }
      }
      .c-icon--arrow{
        margin-left: auto;
      }
    }
  }
}
.p-pagination{
  display: flex;
  justify-content: flex-end;
  gap: 0.5rem;
  .p-pagination__count{
    padding: .25rem .5rem;
    font-size: 13px;
    border-radius: 3px;
  }
  .p-list__wrap{
    gap:.5rem;
    align-items:center;
    >li{
      *{
        height:1.5rem;
        width:auto;
        min-width: 1.5rem;
        border:1px solid var(--border);
        display:block;
        border-radius:4px;
        text-align: center;
        padding: 2px;
        line-height: 1.4em;
      }
      span{
        opacity: 0.4;
      }
      a{
        &:hover{
          background-color:white;
        }
      }
      &.is-current{
        span{
          background-color: white;
          opacity: 1;
        }
      }
      &.prev{
        *{
          transform: rotate(180deg);
        }
      }
    }
  }
}