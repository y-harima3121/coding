@use "../../foundation/responsive" as *;
/* ! --------------------------------------------------
- carousel no repeated elements
-------------------------------------------------- */
@font-face {
    font-family: "Geist Sans";
    src: url("https://assets.codepen.io/605876/GeistVF.ttf") format("truetype");
}
  
:root {
    --speed: 20s;
    --transition: 0.15s;
}

.l-carouselNoRepeatedElements{
    .p-frame{
        &__head{
            position: fixed;
        }
        &__body{
            padding: 0;
        } 
    }
    .c-button{
        &__text{
            border: none;
            text-decoration: underline;
            margin: 1rem;
        }
    }
}
  
.p-carouselNoRepeatedElements {
    width: 100%;
    height: 100%;
    container-type: inline-size; //コンテナクエリを使用する時に必要なスタイル
    &__box{
        padding: 3rem 4rem;
        width: 100%;
        background: hsl(0 0% 100%);
        overflow: hidden;
        min-width: 340px;
        transition: background-color 0.25s, color 0.25s, border 0.25s, box-shadow 0.25s;

        display: flex;
        flex-direction: column;
        height: 100%;
    }
    &__head{
        display: grid;
        grid-template: auto 1fr / 6fr 4fr;
        gap: 1rem;
        margin-bottom: 2rem;
        transition: opacity 0.5s;
        h2{
            display: flex;
            gap: 0.25ch;
            font-size: clamp(1.5rem, 4cqi + 1rem, 3rem);
            font-weight: 160;
            margin: 0;
            grid-column: 1 / -1;
            span{
                &:last-of-type{
                    display: inline-block;
                    background: linear-gradient(to right, #9333ea, #db2777, #9333ea) 0 0 / 400% 100% no-repeat;
                    background-clip: text;
                    color: transparent;
                    animation: shade 4s infinite linear;
                    @keyframes shade {
                        to {
                            background-position: 100% 0;
                        }
                    }
                }
            }
        }
        p {
            margin: 0;
        }
    }
    &__window{
        height: 280px;
        container-type: inline-size;
        transform-style: preserve-3d;
        width: 100%;
        outline: 4px dashed transparent;
        transition: outline 0.5s;
    
        flex: auto;
    }
    &__scene{
        --buff: 6rem;
        height: 100%;
        width: 100%;
        mask:
            linear-gradient(transparent, white var(--buff) calc(100% - var(--buff)), transparent),
            linear-gradient(90deg, transparent, white var(--buff) calc(100% - var(--buff)), transparent);
        mask-composite: intersect;
    }
    &__grid{
        --count: 4; /* The number of items you have */
        --inset: 0; /* Controls the grid animation offset on entry/exit */
        --outset: .5;
        --rotate: 1;
        height: 100%;
        width: 100%;
        margin: 0;
        list-style-type: none;
        position: relative;
        display: grid;
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 0 2rem;
        transition: transform 0.5s;
        /*	3D translation */
        transform:
            rotateX(calc(var(--rotate, 0) * 0deg))
            rotateZ(calc(var(--rotate, 0) * -5deg))
            skewX(calc(var(--rotate, 0) * 0deg))
            translateY(-50%);
        
        transform-style: preserve-3d;
        gap: 1rem;

        &:hover{
            li{
                animation-play-state: paused; 
            }
        }

        li {
            // min-height: 280px;
            transform-style: preserve-3d;
            width: 100%;
            z-index: calc(1 + var(--active)); 
            &::before{
                content: "";
                position: absolute;
                inset: 4px 4px -2px -2px;
                border-radius: 6px;
                background: hsl(0 0% 0% / 0.1);
                filter: blur(calc(var(--active, 0) * 8px));
                z-index: -1;
                transition: scale var(--transition), opacity var(--transition), translate var(--transition), filter var(--transition);
                transform-origin: 50% 0;
                scale: 1 calc(1 + (var(--active, 0) * 0.05));
                --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
                box-shadow: 0 0 #0000, 0 0 #0000, var(--tw-shadow); 
                .item {
                    align-items: center;
                    background: hsl(0 0% 100%);
                    border: 1px solid hsl(0 0% 90%);
                    color: hsl(0 0% 10%);
                    border-radius: 6px;
                    cursor: pointer;
                    display: flex;
                    gap: 1rem;
                    height: 100%;
                    justify-content: start;
                    overflow: hidden;
                    text-align: center;
                    width: 100%;
                    transition: transform var(--transition), scale var(--transition), background-color 0.25s, color 0.25s, border 0.25s, box-shadow 0.25s;;
                    scale: calc(1 + (var(--active, 0) * 0.05));
                    transform: translate3d(0, 0, calc(var(--active, 0) * 24px));
                    &_icon{
                        width: 24px;
                        color: rgb(124, 58, 237);
                    }
                    &_text{
                        flex: 1;
                        text-align: center;
                    }
                }
            }
            &:nth-of-type(1) { --index: 0; }
            &:nth-of-type(2) { --index: 0; }
            &:nth-of-type(3) { --index: 1; }
            &:nth-of-type(4) { --index: 1; }
            &:nth-of-type(5) { --index: 2; }
            &:nth-of-type(6) { --index: 2; }
            &:nth-of-type(7) { --index: 3; }
            &:nth-of-type(8) { --index: 3; }
            // &:nth-of-type(9) { --index: 4; }
            // &:nth-of-type(10) { --index: 4; }
            // &:nth-of-type(11) { --index: 5; }
            // &:nth-of-type(12) { --index: 5; }
            // &:nth-of-type(13) { --index: 6; }
            // &:nth-of-type(14) { --index: 6; }
            // &:nth-of-type(15) { --index: 7; }
            // &:nth-of-type(16) { --index: 7; }
        }
    }
}
  
// 400px以下
@container (width < 520px) {
    .p-carouselNoRepeatedElements{
        &__box{
            padding: 2.5rem 1.5rem;
        }
        &__head{
            grid-template: auto 1fr / 1fr;
        }
        &__scene{
            --buff: 3rem;
        }
        &__grid{
            --count: 8;
            --inset: 0;
            --outset: .8;
            grid-template-columns: 1fr;
            li{
                &:nth-of-type(1) { --index: 0; }
                &:nth-of-type(2) { --index: 1; }
                &:nth-of-type(3) { --index: 2; }
                &:nth-of-type(4) { --index: 3; }
                &:nth-of-type(5) { --index: 4; }
                &:nth-of-type(6) { --index: 5; }
                &:nth-of-type(7) { --index: 6; }
                &:nth-of-type(8) { --index: 7; }
                &:nth-of-type(9) { --index: 8; }
                // &:nth-of-type(10) { --index: 9; }
                // &:nth-of-type(11) { --index: 10; }
                // &:nth-of-type(12) { --index: 11; }
                // &:nth-of-type(13) { --index: 12; }
                // &:nth-of-type(14) { --index: 13; }
                // &:nth-of-type(15) { --index: 14; }
                // &:nth-of-type(16) { --index: 15; }

                --duration: calc(var(--speed) * 2);
                --delay: calc((var(--duration) / var(--count)) * (var(--index, 0) - 8));
            }
        }
    }
}
  
// アニメーションやトランジションを停止しないユーザー向けのCSSルール
@media(prefers-reduced-motion: no-preference) {
    .p-carouselNoRepeatedElements{
        &__grid{
            gap: 0 2rem; 
            li{
                --duration: calc(var(--speed) * 1);
                --delay: calc((var(--duration) / var(--count)) * (var(--index, 0) - 8));
                animation: slide var(--duration) var(--delay) infinite linear;
                translate: 0% calc(((var(--count) - var(--index)) + var(--inset, 0)) * 100%);
                @keyframes slide {
                    100% {
                        translate: 0% calc(calc((var(--index) + var(--outset, 0)) * -100%));
                        
                    }
                }
                &:hover{
                    --active: 1;
                }
            }
        }
    }

    // 400px以下
    @container (width < 520px) {
        .p-carouselNoRepeatedElements{
            &__grid{
                li {
                    --duration: calc(var(--speed) * 2);
                    --delay: calc((var(--duration) / var(--count)) * (var(--index, 0) - 8));
                }
            }
        }
       
    }
}